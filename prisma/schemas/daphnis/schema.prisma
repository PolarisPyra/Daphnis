generator client {
  provider = "prisma-client-js"
  output   = "./generated/daphnis"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model chuni_rival_codes {
  id        Int     @id
  rivalCode String? @db.VarChar(255)
}

model chuni_static_characters {
  id          Int     @id
  str         String? @db.VarChar(255)
  imagePath   String? @db.VarChar(255)
  sortName    String? @db.VarChar(255)
  category    String? @db.VarChar(255)
  netOpenName String? @db.VarChar(255)
  rareType    String? @db.VarChar(255)
}

model chuni_static_mapicon {
  id        Int     @id
  str       String? @db.VarChar(255)
  imagePath String? @db.VarChar(255)
  sortName  String? @db.VarChar(255)
}

model chuni_static_nameplate {
  id          Int     @id
  str         String? @db.VarChar(255)
  imagePath   String? @db.VarChar(255)
  sortName    String? @db.VarChar(255)
  netOpenName String? @db.VarChar(255)
}

model chuni_static_systemvoice {
  id        Int     @id
  str       String? @db.VarChar(255)
  imagePath String? @db.VarChar(255)
  sortName  String? @db.VarChar(255)
}

model chuni_static_trophies {
  id          Int     @id
  str         String? @db.VarChar(255)
  rareType    String? @db.VarChar(255)
  netOpenName String? @db.VarChar(255)
}

model LinkSharingToken {
  id             String    @id
  token          String    @unique
  createdAt      DateTime  @default(now())
  userId         String
  tokenExpiredAt DateTime?
  playlogId      Int?

  user User @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  id        String    @id
  token     String    @unique
  createdAt DateTime  @default(now())
  userId    String
  resetAt   DateTime?

  user User @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id
  expiresAt DateTime
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id          String      @id
  sessions    Session[]
  username    String      @unique
  accessCode  String      @unique
  UserId      Int         @unique
  gameVersion GameVersion @default(Luminous)

  hashedPassword     String
  email              String               @unique
  role               UserRole             @default(USER)
  PasswordResetToken PasswordResetToken[]
  LinkSharingToken   LinkSharingToken[]
}

enum GameVersion {
  LuminousPlus
  Luminous
  SunPlus
  Sun
  NewPlus
  New
}

enum UserRole {
  ADMIN
  USER
}
