generator client {
  provider = "prisma-client-js"
  output   = "./generated/daphnis"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum GameVersion {
  LuminousPlus
  Luminous
  SunPlus
  Sun
  NewPlus
  New
}

enum UserRole {
  ADMIN
  USER
}

model chuni_rival_codes {
  id        Int     @id
  rivalCode String? @db.VarChar(255)
}

model chuni_static_characters {
  id          Int     @id
  str         String? @db.VarChar(255)
  imagePath   String? @db.VarChar(255)
  sortName    String? @db.VarChar(255)
  category    String? @db.VarChar(255)
  netOpenName String? @db.VarChar(255)
  rareType    String? @db.VarChar(255)
}

model chuni_static_mapicon {
  id        Int     @id
  str       String? @db.VarChar(255)
  imagePath String? @db.VarChar(255)
  sortName  String? @db.VarChar(255)
}

model chuni_static_nameplate {
  id          Int     @id
  str         String? @db.VarChar(255)
  imagePath   String? @db.VarChar(255)
  sortName    String? @db.VarChar(255)
  netOpenName String? @db.VarChar(255)
}

model chuni_static_systemvoice {
  id        Int     @id
  str       String? @db.VarChar(255)
  imagePath String? @db.VarChar(255)
  sortName  String? @db.VarChar(255)
}

model chuni_static_trophies {
  id          Int     @id
  str         String? @db.VarChar(255)
  rareType    String? @db.VarChar(255)
  netOpenName String? @db.VarChar(255)
}

model link_sharing_token {
  id             String    @id
  token          String    @unique
  createdAt      DateTime  @default(now())
  userId         String
  tokenExpiredAt DateTime?
  playlogId      Int?

  user user @relation(fields: [userId], references: [id])
}

model password_reset_token {
  id        String    @id
  token     String    @unique
  createdAt DateTime  @default(now())
  userId    String
  resetAt   DateTime?

  user user @relation(fields: [userId], references: [id])
}

model session {
  id        String   @id
  expiresAt DateTime
  userId    String
  user      user     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model user {
  id          String      @id
  sessions    session[]
  username    String      @unique
  accessCode  String      @unique
  UserId      Int         @unique
  gameVersion GameVersion @default(Luminous)

  hashedPassword     String
  email              String                 @unique
  role               UserRole               @default(USER)
  PasswordResetToken password_reset_token[]
  LinkSharingToken   link_sharing_token[]
}
